# https://taskfile.dev

version: '3'

vars:
  CWD:
    sh: git rev-parse --show-toplevel
  APP:
    sh: basename $PWD
  PKG:
    github.com/bzimmer/{{.APP}}
  DIST:
    "{{.CWD}}/dist"
  TASK:
    "{{.CWD}}/.task"
  GO_PACKAGES:
    sh: go list ./...
  VERSION:
    sh: git rev-parse --short HEAD
  LDFLAGS:
    -ldflags "-X {{.PKG}}/pkg.BuildVersion={{.VERSION}}"

tasks:
  default:
    cmds:
      - task: build

  build:
    desc: Build the application
    sources:
      - '**/*.go'
    cmds:
      - go build {{.LDFLAGS}} -o {{.DIST}}/{{.APP}} main.go

  install:
    desc: Install {{.APP}}
    deps: [test]
    cmds:
      - task: build
        vars:
          DIST:
            sh: echo $GOPATH/bin

  serve:
    desc: Run the application
    deps: [build]
    cmds:
      - '{{.DIST}}/{{.APP}} serve'

  lint:
    desc: Runs golint
    cmds:
      - golint {{catLines .GO_PACKAGES}}
      - golangci-lint run -E exhaustive,funlen

  vet:
    desc: Runs golint
    cmds:
      - go vet {{catLines .GO_PACKAGES}}

  test:
    desc: Run all tests
    cmds:
      - mkdir -p {{.DIST}}
      - go test -covermode count -coverprofile {{.DIST}}/coverage.txt {{catLines .GO_PACKAGES}}

  cover:
    desc: Visualize test coverage
    deps: [test]
    cmds:
      - go tool cover -html={{.DIST}}/coverage.txt

  clean:
    desc: Remove build artifacts
    cmds:
      - rm -rf {{.DIST}} {{.TASK}}

  docker:
    desc: Create a docker image for {{.APP}}
    cmds:
      - docker build --build-arg VERSION={{.VERSION}} -t {{.APP}} .

  docker-run:
    desc: Run the docker container for {{.APP}}
    deps: [docker]
    cmds:
      - docker container run -p8080:8080 {{.APP}}
