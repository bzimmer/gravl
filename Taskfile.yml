# https://taskfile.dev

version: '3'

vars:
  CWD:
    sh: git rev-parse --show-toplevel
  APP:
    sh: basename $PWD
  PKG:
    github.com/bzimmer/gravl/pkg/version
  DIST:
    "{{.CWD}}/dist"
  TASK:
    "{{.CWD}}/.task"
  GO_PACKAGES:
    sh: go list ./...
  VERSION:
    sh: git rev-parse --short HEAD
  LDFLAGS:
    -ldflags "-X {{.PKG}}.BuildVersion={{.VERSION}} -X {{.PKG}}.BuildTime="{{now | date "2006-01-02T15:04:05Z07:00"}}""

tasks:
  default:
    cmds:
      - task: build

  generate:
    cmds:
      - go generate -x ./...

  build:
    desc: Build all cmds
    deps: [dist]
    cmds:
      - go build {{.LDFLAGS}} -o {{.DIST}}/gravl cmd/gravl/*.go

  install:
    desc: Install {{.APP}}
    deps: [test]
    cmds:
      - task: build
        vars:
          DIST:
            sh: echo $GOPATH/bin

  lint:
    desc: Runs lint
    cmds:
      - golangci-lint -v run

  test-all:
    desc: Run tests
    deps: [test, test-integration]

  dist:
    cmds:
      - mkdir -p {{.DIST}}

  test:
    desc: Run tests
    deps: [dist]
    cmds:
      - go test {{.CLI_ARGS}} -race -count=1 -covermode atomic -coverprofile {{.DIST}}/coverage.txt ./...

  test-integration:
    desc: Run integration tests
    deps: [build]
    cmds:
      - go test {{.CLI_ARGS}} --tags=integration -race -count=1 -covermode atomic ./...

  cover:
    desc: Visualize test coverage
    deps: [test]
    cmds:
      - go tool cover -html={{.DIST}}/coverage.txt

  clean:
    desc: Remove build artifacts
    cmds:
      - rm -rf {{.DIST}} {{.TASK}}

  manual:
    desc: Generate usage documentation
    deps: [build]
    cmds:
      - dist/gravl manual > docs/commands.md

  snapshot:
    desc: Build a snapshot
    cmds:
      - goreleaser release --snapshot --rm-dist
