{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"gravl - command line access to activity platforms","text":""},{"location":"#installation","title":"Installation","text":"<pre><code>$ brew install bzimmer/tap/gravl\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"<p>All necessary credentials are read from environment variables or command-line flags. To create a template <code>.env</code> file, run the <code>envvars</code> command:</p> <pre><code>~/Development/src/github.com/bzimmer/gravl (oauth) &gt; ./dist/gravl envvars\nCYCLINGANALYTICS_ACCESS_TOKEN=\nCYCLINGANALYTICS_CLIENT_ID=\nCYCLINGANALYTICS_CLIENT_SECRET=\nRWGPS_ACCESS_TOKEN=\nRWGPS_CLIENT_ID=\nSTRAVA_CLIENT_ID=\nSTRAVA_CLIENT_SECRET=\nSTRAVA_REFRESH_TOKEN=\nZWIFT_PASSWORD=\nZWIFT_USERNAME=\n</code></pre> <p>Save these to a file, add your own credentials, and then source the file (or use whatever environment variable mechanism suits your setup).</p>"},{"location":"#authentication","title":"Authentication","text":"<p>The package has functionality to generate access and refresh tokens for both <code>cyclinganalytics</code> and <code>strava</code> by using the <code>oauth</code> command for each after acquiring the client id from the respective sites.</p> <pre><code>~/Development/src/github.com/bzimmer/gravl (oauth) &gt; ./dist/gravl strava oauth\n2021-10-22T07:38:38-07:00 INF created strava client\n2021-10-22T07:38:38-07:00 INF oauth redirect=http://localhost:9001/strava/auth/callback\n2021-10-22T07:38:38-07:00 INF serving address=http://localhost:9001\n</code></pre> <p>Open a browser to http://localhost:9001 and you will be redirected to, in this case, Strava. Once you authorize the application the credentials will be provided in a json document in the browser. Copy the tokens to your <code>env</code> configuration file and try some commands.</p> <p>For most commands the timeout value is reset on each query. For example, if you query 12 activities from Strava each query will honor the timeout value, it's not a deadline.</p>"},{"location":"#usage","title":"Usage","text":"<p>See the manual for an overview of all the commands.</p>"},{"location":"commands/","title":"Commands","text":""},{"location":"commands/#global-flags","title":"Global Flags","text":"Name Aliases EnvVars Description verbosity v Log level (trace, debug, info, warn, error, fatal, panic) monochrome m Use monochrome logging, color enabled by default json j Emit all results as JSON and print to stdout http-tracing Log all http calls (warning: no effort is made to mask log ids, keys, and other sensitive information) timeout t Timeout duration (eg, 1ms, 2s, 5m, 3h) help h show help"},{"location":"commands/#commands_1","title":"Commands","text":"<ul> <li>cyclinganalytics</li> <li>cyclinganalytics activities</li> <li>cyclinganalytics activity</li> <li>cyclinganalytics athlete</li> <li>cyclinganalytics oauth</li> <li>cyclinganalytics streamsets</li> <li>envvars</li> <li>help</li> <li>qp</li> <li>qp copy</li> <li>qp export</li> <li>qp list</li> <li>qp providers</li> <li>qp status</li> <li>qp upload</li> <li>rwgps</li> <li>rwgps activities</li> <li>rwgps activity</li> <li>rwgps athlete</li> <li>rwgps route</li> <li>rwgps routes</li> <li>strava</li> <li>strava activities</li> <li>strava activity</li> <li>strava athlete</li> <li>strava oauth</li> <li>strava photos</li> <li>strava refresh</li> <li>strava route</li> <li>strava routes</li> <li>strava streams</li> <li>strava streamsets</li> <li>strava update</li> <li>strava webhook</li> <li>strava webhook list</li> <li>strava webhook subscribe</li> <li>strava webhook unsubscribe</li> <li>version</li> <li>zwift</li> <li>zwift activities</li> <li>zwift activity</li> <li>zwift athlete</li> <li>zwift files</li> <li>zwift refresh</li> </ul>"},{"location":"commands/#cyclinganalytics","title":"cyclinganalytics","text":"<p>Description</p> <p>Operations supported by the CyclingAnalytics API</p> <p>Flags</p> Name Aliases EnvVars Description cyclinganalytics-client-id CYCLINGANALYTICS_CLIENT_ID CyclingAnalytics client id cyclinganalytics-client-secret CYCLINGANALYTICS_CLIENT_SECRET CyclingAnalytics client secret cyclinganalytics-access-token CYCLINGANALYTICS_ACCESS_TOKEN CyclingAnalytics access token rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries"},{"location":"commands/#cyclinganalytics-activities","title":"cyclinganalytics activities","text":"<p>Description</p> <p>Query activities for the authenticated athlete</p> <p>Syntax</p> <pre><code>$ gravl cyclinganalytics activities [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description count N The number of activities to query from CA (the number returned will be &lt;= N)"},{"location":"commands/#cyclinganalytics-activity","title":"cyclinganalytics activity","text":"<p>Description</p> <p>Query an activity for the authenticated athlete</p> <p>Syntax</p> <pre><code>$ gravl cyclinganalytics activity [flags]\n</code></pre>"},{"location":"commands/#cyclinganalytics-athlete","title":"cyclinganalytics athlete","text":"<p>Description</p> <p>Query for the authenticated athlete</p> <p>Syntax</p> <pre><code>$ gravl cyclinganalytics athlete [flags]\n</code></pre> <p>Example</p> <pre><code>$ gravl ca t\n{\n\"email\": \"me@example.com\",\n \"id\": 88827722,\n \"name\": \"That Guy\",\n \"sex\": \"male\",\n \"timezone\": \"America/Los_Angeles\",\n \"units\": \"us\"\n}\n</code></pre>"},{"location":"commands/#cyclinganalytics-oauth","title":"cyclinganalytics oauth","text":"<p>Description</p> <p>Authentication endpoints for access and refresh tokens</p> <p>Syntax</p> <pre><code>$ gravl cyclinganalytics oauth [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description origin Callback origin port Port on which to listen"},{"location":"commands/#cyclinganalytics-streamsets","title":"cyclinganalytics streamsets","text":"<p>Description</p> <p>Return the set of available streams for query</p> <p>Syntax</p> <pre><code>$ gravl cyclinganalytics streamsets [flags]\n</code></pre>"},{"location":"commands/#envvars","title":"envvars","text":"<p>Description</p> <p>Useful for creating a .env file for all possible environment variables</p> <p>Syntax</p> <pre><code>$ gravl envvars [flags]\n</code></pre>"},{"location":"commands/#help","title":"help","text":"<p>Description</p> <p>Shows a list of commands or help for one command</p> <p>Syntax</p> <pre><code>$ gravl help [flags] [command]\n</code></pre>"},{"location":"commands/#qp","title":"qp","text":"<p>Description</p> <p>Manage the flow of activity between different platforms</p> <p>Flags</p> Name Aliases EnvVars Description cyclinganalytics-client-id CYCLINGANALYTICS_CLIENT_ID CyclingAnalytics client id cyclinganalytics-client-secret CYCLINGANALYTICS_CLIENT_SECRET CyclingAnalytics client secret cyclinganalytics-access-token CYCLINGANALYTICS_ACCESS_TOKEN CyclingAnalytics access token rwgps-client-id RWGPS_CLIENT_ID RideWithGPS client id rwgps-access-token RWGPS_ACCESS_TOKEN RideWithGPS access token strava-client-id STRAVA_CLIENT_ID Strava client id strava-client-secret STRAVA_CLIENT_SECRET Strava client secret strava-refresh-token STRAVA_REFRESH_TOKEN Strava refresh token zwift-username ZWIFT_USERNAME Zwift username zwift-password ZWIFT_PASSWORD Zwift password"},{"location":"commands/#qp-copy","title":"qp copy","text":"<p>Description</p> <p>Copy an activity from a source to a destination</p> <p>Syntax</p> <pre><code>$ gravl qp copy [flags] --from &lt;exporter&gt; --to &lt;uploader&gt; id [id, ...]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries from Source data provider to Sink data provider overwrite o Overwrite the file if it exists; fail otherwise output O The filename to use for writing the contents of the export, if not specified the contents are streamed to stdout poll Continually check the status of the request until it is completed interval The amount of time to wait between polling for an updated status iterations N The max number of polling iterations to perform <p>Example</p> <pre><code>$ gravl qp copy --from zwift --to cyclinganalytics 934398333398662432\n2021-10-28T06:25:55-07:00 INF created zwift client\n2021-10-28T06:25:55-07:00 INF created cyclinganalytics client\n2021-10-28T06:25:56-07:00 INF export exp=2021-10-26-18-19-39.fit id=934398333398662432\n2021-10-28T06:25:57-07:00 INF poll id=1067278367 iteration=0\n2021-10-28T06:26:00-07:00 INF poll id=1067278367 iteration=1\n2021-10-28T06:26:00-07:00 INF counters count=1 metric=gravl.upload.file.success\n2021-10-28T06:26:00-07:00 INF counters count=2 metric=gravl.upload.poll\n2021-10-28T06:26:00-07:00 INF samples count=1 max=4.181048393249512 mean=4.181048393249512 metric=gravl.runtime min=4.181048393249512 stddev=0\n</code></pre> <pre><code>$ gravl qp copy --from zwift --to cyclinganalytics 934398333398662432\n2021-10-28T06:34:06-07:00 INF created zwift client\n2021-10-28T06:34:06-07:00 INF created cyclinganalytics client\n2021-10-28T06:34:07-07:00 INF export exp=2021-10-26-18-19-39.fit id=934398333398662432\n2021-10-28T06:34:08-07:00 INF poll id=9819686356 iteration=0\n{\n\"upload_id\": 9819686356,\n \"status\": \"processing\",\n \"ride_id\": 0,\n \"user_id\": 1603544,\n \"format\": \"fit\",\n \"datetime\": \"2021-10-28T13:34:09\",\n \"filename\": \"2021-10-26-18-19-39.fit\",\n \"size\": 113324,\n \"error\": \"\",\n \"error_code\": \"\"\n}\n2021-10-28T06:34:10-07:00 INF poll id=9819686356 iteration=1\n{\n\"upload_id\": 9819686356,\n \"status\": \"error\",\n \"ride_id\": 0,\n \"user_id\": 1603544,\n \"format\": \"fit\",\n \"datetime\": \"2021-10-28T13:34:09\",\n \"filename\": \"2021-10-26-18-19-39.fit\",\n \"size\": 113324,\n \"error\": \"The ride already exists: 894091983723\",\n \"error_code\": \"duplicate_ride\"\n}\n2021-10-28T06:34:10-07:00 INF counters count=2 metric=gravl.upload.poll\n2021-10-28T06:34:10-07:00 INF counters count=1 metric=gravl.upload.file.success\n2021-10-28T06:34:10-07:00 INF samples count=1 max=3.807884454727173 mean=3.807884454727173 metric=gravl.runtime min=3.807884454727173 stddev=0\n</code></pre>"},{"location":"commands/#qp-export","title":"qp export","text":"<p>Description</p> <p>Export an activity from the source</p> <p>Syntax</p> <pre><code>$ gravl qp export [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries from Source data provider overwrite o Overwrite the file if it exists; fail otherwise output O The filename to use for writing the contents of the export, if not specified the contents are streamed to stdout <p>Example</p> <p>If neither <code>-o</code> or <code>-O</code> are specified the contents of the file are written to stdout. If <code>-o</code> is specified, the file will be written to disk using the name provided by Strava, even if it already exists locally. If <code>-O</code> is specified, the file will be written to disk using the name provided by the flag. It will not overwrite an existing file unless <code>-o</code> was also specified.</p>"},{"location":"commands/#qp-list","title":"qp list","text":"<p>Description</p> <p>List the files suitable for uploading</p> <p>Syntax</p> <pre><code>$ gravl qp list [flags] {FILE | DIRECTORY} (...)\n</code></pre>"},{"location":"commands/#qp-providers","title":"qp providers","text":"<p>Description</p> <p>Return the set of active exporters and uploaders</p> <p>Syntax</p> <pre><code>$ gravl qp providers [flags]\n</code></pre>"},{"location":"commands/#qp-status","title":"qp status","text":"<p>Description</p> <p>Check the status of an upload</p> <p>Syntax</p> <pre><code>$ gravl qp status [flags] UPLOAD_ID (...)\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries to Sink data provider poll Continually check the status of the request until it is completed interval The amount of time to wait between polling for an updated status iterations N The max number of polling iterations to perform"},{"location":"commands/#qp-upload","title":"qp upload","text":"<p>Description</p> <p>Syntax</p> <pre><code>$ gravl qp upload [flags] {FILE | DIRECTORY} (...)\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries to Sink data provider poll Continually check the status of the request until it is completed interval The amount of time to wait between polling for an updated status iterations N The max number of polling iterations to perform"},{"location":"commands/#rwgps","title":"rwgps","text":"<p>Description</p> <p>Operations supported by the RideWithGPS API</p> <p>Flags</p> Name Aliases EnvVars Description rwgps-client-id RWGPS_CLIENT_ID RideWithGPS client id rwgps-access-token RWGPS_ACCESS_TOKEN RideWithGPS access token rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries"},{"location":"commands/#rwgps-activities","title":"rwgps activities","text":"<p>Description</p> <p>Query activities for the authenticated athlete</p> <p>Syntax</p> <pre><code>$ gravl rwgps activities [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description count N The number of activities to query from RideWithGPS <p>Example</p> <p>Query RideWithGPS activities with an optional count. The order of the activities is not guaranteed but generally they are returned most recent first.</p> <pre><code>$ gravl rwgps activities -N 10\n2021-02-20T14:31:23-08:00 INF do all=0 count=10 n=0 start=0 total=10\n2021-02-20T14:31:23-08:00 INF do all=10 count=10 n=10 start=1 total=10\n{\n\"created_at\": \"2021-02-20T20:12:49Z\",\n \"departed_at\": \"2021-02-20T18:39:22Z\",\n \"description\": \"\",\n \"distance\": 30741.9,\n \"duration\": 5593,\n \"elevation_gain\": 516.281,\n \"elevation_loss\": 521.453,\n \"id\": 62829442,\n \"name\": \"2021/02/20\",\n \"type\": \"\",\n \"track_id\": \"60316d406b34d7693a3f015b\",\n \"updated_at\": \"2021-02-20T20:12:49Z\",\n \"user_id\": 836,\n \"visibility\": 1,\n \"first_lat\": 47.502655,\n \"first_lng\": -122.602798,\n \"last_lat\": 47.502655,\n \"last_lng\": -122.602798\n}\n...\n{\n\"created_at\": \"2021-01-26T00:38:58Z\",\n \"departed_at\": \"2021-01-25T23:34:32Z\",\n \"description\": \"\",\n \"distance\": 25356,\n \"duration\": 3851,\n \"elevation_gain\": 403.445,\n \"elevation_loss\": 400.121,\n \"id\": 61904776,\n \"name\": \"2021/01/25\",\n \"type\": \"\",\n \"track_id\": \"600f64a2fa348e8e23e2d546\",\n \"updated_at\": \"2021-01-26T00:38:58Z\",\n \"user_id\": 836,\n \"visibility\": 1,\n \"first_lat\": 47.502655,\n \"first_lng\": -122.602798,\n \"last_lat\": 47.502655,\n \"last_lng\": -122.602798\n}\n</code></pre>"},{"location":"commands/#rwgps-activity","title":"rwgps activity","text":"<p>Description</p> <p>Query an activity from RideWithGPS</p> <p>Syntax</p> <pre><code>$ gravl rwgps activity [flags]\n</code></pre>"},{"location":"commands/#rwgps-athlete","title":"rwgps athlete","text":"<p>Description</p> <p>Query for the authenticated athlete</p> <p>Syntax</p> <pre><code>$ gravl rwgps athlete [flags]\n</code></pre>"},{"location":"commands/#rwgps-route","title":"rwgps route","text":"<p>Description</p> <p>Query a route from RideWithGPS</p> <p>Syntax</p> <pre><code>$ gravl rwgps route [flags]\n</code></pre>"},{"location":"commands/#rwgps-routes","title":"rwgps routes","text":"<p>Description</p> <p>Query routes for an athlete from RideWithGPS</p> <p>Syntax</p> <pre><code>$ gravl rwgps routes [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description count N The number of routes to query from RideWithGPS"},{"location":"commands/#strava","title":"strava","text":"<p>Description</p> <p>Operations supported by the Strava API</p> <p>Flags</p> Name Aliases EnvVars Description strava-client-id STRAVA_CLIENT_ID Strava client id strava-client-secret STRAVA_CLIENT_SECRET Strava client secret strava-refresh-token STRAVA_REFRESH_TOKEN Strava refresh token rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries <p>Overview</p> <p>The Strava client is comprised of general API access supporting activities, routes, and streams.</p> <p>Additionally, there's full support for implementing <code>webhooks</code> but only only webhook management is available via the commandline (eg <code>strava webhook list</code>, <code>strava webhook subscribe</code>, and <code>strava webhook unsubscribe</code>).</p>"},{"location":"commands/#strava-activities","title":"strava activities","text":"<p>Description</p> <p>Query activities for an athlete from Strava</p> <p>Syntax</p> <pre><code>$ gravl strava activities [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description count N The number of activities to query from Strava (the number returned will be &lt;= N) filter f Expression for filtering activities to remove attribute B Evaluate the expression on an activity and return only those results after since Return results after the time specified before Return results before the time specified <p>Example</p> <p>List all <code>VirtualRides</code> in the last 20 activities and display their <code>ID</code>, <code>Name</code>, <code>StartDate</code>, and their <code>Distance</code> in miles</p> <pre><code>$ gravl -c --timeout 1m strava activities -N 20 -f \".Type == 'VirtualRide'\" -B \".ID, .Name, .StartDateLocal, .Distance.Miles()\"\n2021-02-20T08:50:32-08:00 INF do all=0 count=20 n=0 start=0 total=20\n2021-02-20T08:50:34-08:00 INF do all=20 count=20 n=20 start=1 total=20\n[4807285657,\"Yorkshire - Jon's Short Mix\",\"2021-02-18T06:56:20Z\",10.702124592380498]\n[4802094087,\"London\",\"2021-02-17T06:55:39Z\",12.95105334844508]\n[4741552384,\"2004\",\"2021-02-05T18:15:27Z\",17.51514902966675]\n</code></pre>"},{"location":"commands/#strava-activity","title":"strava activity","text":"<p>Description</p> <p>Query an activity from Strava</p> <p>Syntax</p> <pre><code>$ gravl strava activity [flags] ACTIVITY_ID (...)\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description stream s Streams to include in the activity <p>Example</p> <p>To query a specific activity:</p> <pre><code>$ gravl strava activity 4802094087\n{\n\"id\": 4802094087,\n \"resource_state\": 3,\n \"external_id\": \"zwift-activity-752165469668926976.fit\",\n \"upload_id\": 5123870639,\n...\n \"gear\": {\n\"id\": \"b6713218\",\n  \"primary\": false,\n  \"name\": \"Smart Trainer\",\n  \"resource_state\": 2,\n  \"distance\": 711026,\n  \"athlete_id\": 0\n},\n ...\n \"device_name\": \"Zwift\",\n \"segment_leaderboard_opt_out\": false,\n \"leaderboard_opt_out\": false,\n \"perceived_exertion\": 6,\n \"prefer_perceived_exertion\": false\n}\n</code></pre> <p>To include stream data use the <code>-s</code> flag:</p> <pre><code>$ gravl strava activity -s watts 4802094087\n{\n\"id\": 4802094087,\n \"resource_state\": 3,\n \"external_id\": \"zwift-activity-752165469668926976.fit\",\n \"upload_id\": 5123870639,\n ...\n \"name\": \"London\",\n \"distance\": 20842.7,\n \"moving_time\": 2463,\n \"elapsed_time\": 2463,\n \"total_elevation_gain\": 216,\n \"type\": \"VirtualRide\",\n \"start_date\": \"2021-02-17T14:55:39Z\",\n \"start_date_local\": \"2021-02-17T06:55:39Z\",\n ...\n \"streams\": {\n\"activity_id\": 4802094087,\n  \"distance\": {\n\"original_size\": 2464,\n   \"resolution\": \"high\",\n   \"series_type\": \"distance\",\n   \"data\": [\n2.5,\n    4.3,\n    6.6,\n    9.2,\n    ...\n    20829.9,\n    20835.3,\n    20840.2,\n    20845.2\n   ]\n},\n  \"watts\": {\n\"original_size\": 2464,\n   \"resolution\": \"high\",\n   \"series_type\": \"distance\",\n   \"data\": [\n89,\n    105,\n    105,\n    105,\n    ...\n    367,\n    368,\n    376,\n    408,\n    406,\n    396,\n    396,\n    408,\n    412,\n    361,\n    400,\n    ...\n   ]\n}\n}\n}\n</code></pre>"},{"location":"commands/#strava-athlete","title":"strava athlete","text":"<p>Description</p> <p>Query an athlete from Strava</p> <p>Syntax</p> <pre><code>$ gravl strava athlete [flags]\n</code></pre>"},{"location":"commands/#strava-oauth","title":"strava oauth","text":"<p>Description</p> <p>Authentication endpoints for access and refresh tokens</p> <p>Syntax</p> <pre><code>$ gravl strava oauth [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description origin Callback origin port Port on which to listen"},{"location":"commands/#strava-photos","title":"strava photos","text":"<p>Description</p> <p>Query photos from Strava</p> <p>Syntax</p> <pre><code>$ gravl strava photos [flags] ACTIVITY_ID (...)\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description size s"},{"location":"commands/#strava-refresh","title":"strava refresh","text":"<p>Description</p> <p>Acquire a new refresh token</p> <p>Syntax</p> <pre><code>$ gravl strava refresh [flags]\n</code></pre>"},{"location":"commands/#strava-route","title":"strava route","text":"<p>Description</p> <p>Query a route from Strava</p> <p>Syntax</p> <pre><code>$ gravl strava route [flags] ROUTE_ID (...)\n</code></pre>"},{"location":"commands/#strava-routes","title":"strava routes","text":"<p>Description</p> <p>Query routes for an athlete from Strava</p> <p>Syntax</p> <pre><code>$ gravl strava routes [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description count N The number of routes to query from Strava (the number returned will be &lt;= N)"},{"location":"commands/#strava-streams","title":"strava streams","text":"<p>Description</p> <p>Query streams for an activity from Strava</p> <p>Syntax</p> <pre><code>$ gravl strava streams [flags] ACTIVITY_ID (...)\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description stream s Streams to include in the activity"},{"location":"commands/#strava-streamsets","title":"strava streamsets","text":"<p>Description</p> <p>Return the set of available streams for query</p> <p>Syntax</p> <pre><code>$ gravl strava streamsets [flags]\n</code></pre> <p>Example</p> <p>Query the available streams for query with <code>activity</code>.</p> <pre><code>$ gravl strava streamsets\n{\n\"altitude\": \"The sequence of altitude values for this stream, in meters [float]\",\n \"cadence\": \"The sequence of cadence values for this stream, in rotations per minute [integer]\",\n \"distance\": \"The sequence of distance values for this stream, in meters [float]\",\n \"grade_smooth\": \"The sequence of grade values for this stream, as percents of a grade [float]\",\n \"heartrate\": \"The sequence of heart rate values for this stream, in beats per minute [integer]\",\n \"latlng\": \"The sequence of lat/long values for this stream [float, float]\",\n \"moving\": \"The sequence of moving values for this stream, as boolean values [boolean]\",\n \"temp\": \"The sequence of temperature values for this stream, in celsius degrees [float]\",\n \"time\": \"The sequence of time values for this stream, in seconds [integer]\",\n \"velocity_smooth\": \"The sequence of velocity values for this stream, in meters per second [float]\",\n \"watts\": \"The sequence of power values for this stream, in watts [integer]\"\n}\n</code></pre> <p>To get just the stream names:</p> <pre><code>$ gravl strava streamsets | jq -r \"keys | .[]\"\naltitude\ncadence\ndistance\ngrade_smooth\nheartrate\nlatlng\nmoving\ntemp\ntime\nvelocity_smooth\nwatts\n</code></pre>"},{"location":"commands/#strava-update","title":"strava update","text":"<p>Description</p> <p>Syntax</p> <pre><code>$ gravl strava update [flags] ACTIVITY_ID (...)\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description name Set the name for the activity gear Set the gear id for the activity sport Set the sport for the activity description Set the description for the activity hidden Hide the activity from the home dashboard no-hidden Display the activity on the home dashboard commute The activity is a commute no-commute The activity is not a commute trainer The activity was completed on a trainer no-trainer The activity was not completed on a trainer"},{"location":"commands/#strava-webhook","title":"strava webhook","text":"<p>Description</p> <p>Manage webhook subscriptions</p>"},{"location":"commands/#strava-webhook-list","title":"strava webhook list","text":"<p>Description</p> <p>List all active webhook subscriptions</p> <p>Syntax</p> <pre><code>$ gravl strava webhook list [flags]\n</code></pre>"},{"location":"commands/#strava-webhook-subscribe","title":"strava webhook subscribe","text":"<p>Description</p> <p>Subscribe for webhook notifications</p> <p>Syntax</p> <pre><code>$ gravl strava webhook subscribe [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description url Address where webhook events will be sent (max length 255 characters verify String chosen by the application owner for client security"},{"location":"commands/#strava-webhook-unsubscribe","title":"strava webhook unsubscribe","text":"<p>Description</p> <p>Unsubscribe an active webhook subscription (or all if specified)</p> <p>Syntax</p> <pre><code>$ gravl strava webhook unsubscribe [flags]\n</code></pre>"},{"location":"commands/#version","title":"version","text":"<p>Description</p> <p>Version</p> <p>Syntax</p> <pre><code>$ gravl version [flags]\n</code></pre>"},{"location":"commands/#zwift","title":"zwift","text":"<p>Description</p> <p>Operations supported by the Zwift API</p> <p>Flags</p> Name Aliases EnvVars Description zwift-username ZWIFT_USERNAME Zwift username zwift-password ZWIFT_PASSWORD Zwift password rate-limit Minimum time interval between API request events (eg, 1ms, 2s, 5m, 3h) rate-burst Maximum burst size for API request events concurrency Maximum concurrent API queries <p>Overview</p> <p>The Zwift client was heavily inspired by zwift-client.</p> <p>The command <code>files</code> is useful for uploading local files to services without direct integration such as Cycling Analytics.</p>"},{"location":"commands/#zwift-activities","title":"zwift activities","text":"<p>Description</p> <p>Query activities for an athlete from Zwift</p> <p>Syntax</p> <pre><code>$ gravl zwift activities [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description count N The number of activities to query from Zwift (the number returned will be &lt;= N)"},{"location":"commands/#zwift-activity","title":"zwift activity","text":"<p>Description</p> <p>Query an activity from Zwift</p> <p>Syntax</p> <pre><code>$ gravl zwift activity [flags] ACTIVITY_ID (...)\n</code></pre>"},{"location":"commands/#zwift-athlete","title":"zwift athlete","text":"<p>Description</p> <p>Query the athlete profile from Zwift</p> <p>Syntax</p> <pre><code>$ gravl zwift athlete [flags]\n</code></pre>"},{"location":"commands/#zwift-files","title":"zwift files","text":"<p>Description</p> <p>List all local Zwift files</p> <p>Syntax</p> <pre><code>$ gravl zwift files [flags]\n</code></pre> <p>Example</p> <p>List all local files from the Zwift app's directory. Any files less than 1K in size or named <code>inProgressActivity.fit</code> will be ignored.</p> <pre><code>$ gravl zwift files\n2021-02-19T19:39:25-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-39-52.fit size=584\n2021-02-19T19:39:25-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-14-13.fit size=584\n2021-02-19T19:39:25-08:00 WRN skipping, activity in progress file=/Users/bzimmer/Documents/Zwift/Activities/inProgressActivity.fit\n[\n\"/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-40-53.fit\",\n \"/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-15-16.fit\"\n]\n</code></pre> <p>This command can be easily combined with <code>jq</code> to upload files to CyclingAnalytics, Strava, or any other site.</p> <pre><code>$ gravl zwift files | jq -r \".[]\" | xargs gravl strava upload -n\n2021-02-19T19:41:50-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-39-52.fit size=584\n2021-02-19T19:41:50-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-14-13.fit size=584\n2021-02-19T19:41:50-08:00 WRN skipping, activity in progress file=/Users/bzimmer/Documents/Zwift/Activities/inProgressActivity.fit\n2021-02-19T19:41:50-08:00 INF collecting file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-40-53.fit\n2021-02-19T19:41:50-08:00 INF uploading dryrun=true file=2021-01-12-18-40-53.fit\n2021-02-19T19:41:50-08:00 INF collecting file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-15-16.fit\n2021-02-19T19:41:50-08:00 INF uploading dryrun=true file=2021-01-26-18-15-16.fit\n</code></pre>"},{"location":"commands/#zwift-refresh","title":"zwift refresh","text":"<p>Description</p> <p>Acquire a new refresh token</p> <p>Syntax</p> <pre><code>$ gravl zwift refresh [flags]\n</code></pre> <p>Example</p> <p>Query for a new refresh token from Zwift.</p> <pre><code>$ gravl zwift refresh\n{\n\"access_token\": \"12345\",\n    \"token_type\": \"bearer\",\n    \"refresh_token\": \"67890\",\n    \"expiry\": \"2021-02-20T01:29:05.964572-08:00\"\n}\n</code></pre>"},{"location":"examples/","title":"Examples","text":"<p>The following examples demonstrate some of the flexibility provided by <code>gravl</code> coupled with common unix tools like <code>jq</code>. Enjoy!</p>"},{"location":"examples/#start-the-strava-oauth-server","title":"Start the Strava OAuth server","text":"<p>Start the server, navigate to localhost:9001 and follow the directions.</p> <pre><code>$ gravl strava oauth\n2021-02-26T08:20:08-08:00 INF serving address=0.0.0.0:9001\n2021-02-26T08:20:15-08:00 INF request client_ip=[::1]:63528 elapsed=0.101966 method=GET path=/strava/auth/login status=302 user_agent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.192 Safari/537.36\"\n2021-02-26T08:20:35-08:00 INF request client_ip=[::1]:63528 elapsed=989.706809 method=GET path=/strava/auth/callback?state=yicOcr...BYNrVzg%3D%3D&amp;code=a13a5556bc906d8...42b3e8668&amp;scope=read,activity:write,activity:read_all,profile:read_all,read_all status=200 user_agent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.192 Safari/537.36\"\n2021-02-26T08:20:35-08:00 INF request client_ip=[::1]:63528 elapsed=0.461866 method=GET path=/strava/auth/login status=302 user_agent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.192 Safari/537.36\"\n</code></pre> <p>After being authenticated copy the <code>access_token</code> and <code>refresh_token</code> to the <code>gravl.yaml</code> configuration file.</p>"},{"location":"examples/#download-the-last-three-activities-from-strava-and-save-them-locally","title":"Download the last three activities from Strava and save them locally","text":"<pre><code>$ gravl -c strava activities -N 3 | jq -r \".id\" | xargs gravl -c strava export -o\n2021-02-26T08:09:06-08:00 INF do all=0 count=3 n=0 start=0 total=3\n2021-02-26T08:09:07-08:00 INF do all=3 count=3 n=3 start=1 total=3\n2021-02-26T08:09:08-08:00 INF export activityID=4844875821 format=original\n{\"name\":\"This_and_that.fit\",\"format\":\"fit\",\"id\":4844875821}\n2021-02-26T08:09:08-08:00 INF export activityID=4838740537 format=original\n{\"name\":\"Blakely_Harbor.fit\",\"format\":\"fit\",\"id\":4838740537}\n2021-02-26T08:09:09-08:00 INF export activityID=4832995501 format=original\n{\"name\":\"Panda_II.fit\",\"format\":\"fit\",\"id\":4832995501}\n$ ls -als *.fit\n128 -rw-r--r--  1 bzimmer  staff    61K Feb 26 08:09 Blakely_Harbor.fit\n216 -rw-r--r--  1 bzimmer  staff   107K Feb 26 08:09 Panda_II.fit\n536 -rw-r--r--  1 bzimmer  staff   268K Feb 26 08:09 This_and_that.fit\n</code></pre>"},{"location":"examples/#export-the-last-four-activities-from-zwift-and-upload-them-to-cyclinganalytics","title":"Export the last four activities from Zwift and upload them to CyclingAnalytics","text":"<p>In this example all of the activities already exist, hence the error message, but the mechanics are the important bit</p> <p>Note the use of <code>.id_str</code> with <code>jq</code> because the Zwift id is not properly parsed by <code>jq</code></p> <pre><code>$ gravl -c zwift activities -N 4 | jq -r \".id_str\" | xargs gravl -c qp -e zwift -u ca\n2021-02-26T13:12:25-08:00 INF do all=0 count=4 n=0 start=0 total=4\n2021-02-26T13:12:25-08:00 INF do all=4 count=4 n=4 start=1 total=4\n2021-02-26T13:12:25-08:00 INF exporter provider=zwift\n2021-02-26T13:12:26-08:00 INF uploader provider=ca\n2021-02-26T13:12:26-08:00 INF export activityID=752165469668926976\n2021-02-26T13:12:26-08:00 INF export activityID=736562609413586256\n2021-02-26T13:12:26-08:00 INF export activityID=743809551513814416\n2021-02-26T13:12:26-08:00 INF export activityID=752890649715818240\n2021-02-26T13:12:26-08:00 INF export activityID=752890649715818240 filename=2021-02-18-06-56-16.fit\n2021-02-26T13:12:26-08:00 INF upload activityID=752890649715818240\n2021-02-26T13:12:26-08:00 INF export activityID=736562609413586256 filename=2021-01-26-18-15-16.fit\n2021-02-26T13:12:26-08:00 INF upload activityID=736562609413586256\n2021-02-26T13:12:26-08:00 INF export activityID=743809551513814416 filename=2021-02-05-18-13-46.fit\n2021-02-26T13:12:26-08:00 INF upload activityID=743809551513814416\n2021-02-26T13:12:26-08:00 INF export activityID=752165469668926976 filename=2021-02-17-06-55-29.fit\n2021-02-26T13:12:26-08:00 INF upload activityID=752165469668926976\n2021-02-26T13:12:27-08:00 INF status uploadID=1289862592\n2021-02-26T13:12:27-08:00 INF status uploadID=8033493930\n2021-02-26T13:12:27-08:00 INF status uploadID=3117629228\n{\"upload_id\":1289862592,\"status\":\"processing\",\"ride_id\":0,\"user_id\":1603533,\"format\":\"fit\",\"datetime\":\"2021-02-26T21:12:29\",\"filename\":\"2021-02-18-06-56-16.fit\",\"size\":79806,\"error\":\"\",\"error_code\":\"\"}\n{\"upload_id\":8033493930,\"status\":\"processing\",\"ride_id\":0,\"user_id\":1603533,\"format\":\"fit\",\"datetime\":\"2021-02-26T21:12:29\",\"filename\":\"2021-02-17-06-55-29.fit\",\"size\":93239,\"error\":\"\",\"error_code\":\"\"}\n{\"upload_id\":3117629228,\"status\":\"processing\",\"ride_id\":0,\"user_id\":1603533,\"format\":\"fit\",\"datetime\":\"2021-02-26T21:12:29\",\"filename\":\"2021-02-05-18-13-46.fit\",\"size\":114921,\"error\":\"\",\"error_code\":\"\"}\n2021-02-26T13:12:27-08:00 INF status uploadID=5906692136\n{\"upload_id\":5906692136,\"status\":\"processing\",\"ride_id\":0,\"user_id\":1603533,\"format\":\"fit\",\"datetime\":\"2021-02-26T21:12:29\",\"filename\":\"2021-01-26-18-15-16.fit\",\"size\":113287,\"error\":\"\",\"error_code\":\"\"}\n2021-02-26T13:12:29-08:00 INF status uploadID=1289862592\n2021-02-26T13:12:29-08:00 INF status uploadID=8033493930\n2021-02-26T13:12:29-08:00 INF status uploadID=3117629228\n{\"upload_id\":1289862592,\"status\":\"error\",\"ride_id\":0,\"user_id\":1603533,\"format\":\"fit\",\"datetime\":\"2021-02-26T21:12:29\",\"filename\":\"2021-02-18-06-56-16.fit\",\"size\":79806,\"error\":\"The ride already exists: 801167646702\",\"error_code\":\"duplicate_ride\"}\n{\"upload_id\":8033493930,\"status\":\"error\",\"ride_id\":0,\"user_id\":1603533,\"format\":\"fit\",\"datetime\":\"2021-02-26T21:12:29\",\"filename\":\"2021-02-17-06-55-29.fit\",\"size\":93239,\"error\":\"The ride already exists: 509770415934\",\"error_code\":\"duplicate_ride\"}\n{\"upload_id\":3117629228,\"status\":\"error\",\"ride_id\":0,\"user_id\":1603533,\"format\":\"fit\",\"datetime\":\"2021-02-26T21:12:29\",\"filename\":\"2021-02-05-18-13-46.fit\",\"size\":114921,\"error\":\"The ride already exists: 336104747302\",\"error_code\":\"duplicate_ride\"}\n2021-02-26T13:12:30-08:00 INF status uploadID=5906692136\n</code></pre> <p>The go implementation of <code>jq</code>, <code>gojq</code>, does handle the ids correctly.</p> <pre><code>$ gravl -c zwift activities -N 4 | jq -r \".id\"\n2021-02-26T13:24:44-08:00 INF do all=0 count=4 n=0 start=0 total=4\n2021-02-26T13:24:44-08:00 INF do all=4 count=4 n=4 start=1 total=4\n752890649715818200\n752165469668927000\n743809551513814400\n736562609413586300\n$ gravl -c zwift activities -N 4 | gojq -r \".id\"\n2021-02-26T13:24:49-08:00 INF do all=0 count=4 n=0 start=0 total=4\n2021-02-26T13:24:49-08:00 INF do all=4 count=4 n=4 start=1 total=4\n752890649715818240\n752165469668926976\n743809551513814416\n736562609413586256\n</code></pre>"},{"location":"commands/cyclinganalytics-athlete/","title":"Cyclinganalytics athlete","text":"<pre><code>$ gravl ca t\n{\n\"email\": \"me@example.com\",\n \"id\": 88827722,\n \"name\": \"That Guy\",\n \"sex\": \"male\",\n \"timezone\": \"America/Los_Angeles\",\n \"units\": \"us\"\n}\n</code></pre>"},{"location":"commands/qp-copy/","title":"Qp copy","text":"<pre><code>$ gravl qp copy --from zwift --to cyclinganalytics 934398333398662432\n2021-10-28T06:25:55-07:00 INF created zwift client\n2021-10-28T06:25:55-07:00 INF created cyclinganalytics client\n2021-10-28T06:25:56-07:00 INF export exp=2021-10-26-18-19-39.fit id=934398333398662432\n2021-10-28T06:25:57-07:00 INF poll id=1067278367 iteration=0\n2021-10-28T06:26:00-07:00 INF poll id=1067278367 iteration=1\n2021-10-28T06:26:00-07:00 INF counters count=1 metric=gravl.upload.file.success\n2021-10-28T06:26:00-07:00 INF counters count=2 metric=gravl.upload.poll\n2021-10-28T06:26:00-07:00 INF samples count=1 max=4.181048393249512 mean=4.181048393249512 metric=gravl.runtime min=4.181048393249512 stddev=0\n</code></pre> <pre><code>$ gravl qp copy --from zwift --to cyclinganalytics 934398333398662432\n2021-10-28T06:34:06-07:00 INF created zwift client\n2021-10-28T06:34:06-07:00 INF created cyclinganalytics client\n2021-10-28T06:34:07-07:00 INF export exp=2021-10-26-18-19-39.fit id=934398333398662432\n2021-10-28T06:34:08-07:00 INF poll id=9819686356 iteration=0\n{\n\"upload_id\": 9819686356,\n \"status\": \"processing\",\n \"ride_id\": 0,\n \"user_id\": 1603544,\n \"format\": \"fit\",\n \"datetime\": \"2021-10-28T13:34:09\",\n \"filename\": \"2021-10-26-18-19-39.fit\",\n \"size\": 113324,\n \"error\": \"\",\n \"error_code\": \"\"\n}\n2021-10-28T06:34:10-07:00 INF poll id=9819686356 iteration=1\n{\n\"upload_id\": 9819686356,\n \"status\": \"error\",\n \"ride_id\": 0,\n \"user_id\": 1603544,\n \"format\": \"fit\",\n \"datetime\": \"2021-10-28T13:34:09\",\n \"filename\": \"2021-10-26-18-19-39.fit\",\n \"size\": 113324,\n \"error\": \"The ride already exists: 894091983723\",\n \"error_code\": \"duplicate_ride\"\n}\n2021-10-28T06:34:10-07:00 INF counters count=2 metric=gravl.upload.poll\n2021-10-28T06:34:10-07:00 INF counters count=1 metric=gravl.upload.file.success\n2021-10-28T06:34:10-07:00 INF samples count=1 max=3.807884454727173 mean=3.807884454727173 metric=gravl.runtime min=3.807884454727173 stddev=0\n</code></pre>"},{"location":"commands/qp-export/","title":"Qp export","text":"<p>If neither <code>-o</code> or <code>-O</code> are specified the contents of the file are written to stdout. If <code>-o</code> is specified, the file will be written to disk using the name provided by Strava, even if it already exists locally. If <code>-O</code> is specified, the file will be written to disk using the name provided by the flag. It will not overwrite an existing file unless <code>-o</code> was also specified.</p>"},{"location":"commands/rwgps-activities/","title":"Rwgps activities","text":"<p>Query RideWithGPS activities with an optional count. The order of the activities is not guaranteed but generally they are returned most recent first.</p> <pre><code>$ gravl rwgps activities -N 10\n2021-02-20T14:31:23-08:00 INF do all=0 count=10 n=0 start=0 total=10\n2021-02-20T14:31:23-08:00 INF do all=10 count=10 n=10 start=1 total=10\n{\n\"created_at\": \"2021-02-20T20:12:49Z\",\n \"departed_at\": \"2021-02-20T18:39:22Z\",\n \"description\": \"\",\n \"distance\": 30741.9,\n \"duration\": 5593,\n \"elevation_gain\": 516.281,\n \"elevation_loss\": 521.453,\n \"id\": 62829442,\n \"name\": \"2021/02/20\",\n \"type\": \"\",\n \"track_id\": \"60316d406b34d7693a3f015b\",\n \"updated_at\": \"2021-02-20T20:12:49Z\",\n \"user_id\": 836,\n \"visibility\": 1,\n \"first_lat\": 47.502655,\n \"first_lng\": -122.602798,\n \"last_lat\": 47.502655,\n \"last_lng\": -122.602798\n}\n...\n{\n\"created_at\": \"2021-01-26T00:38:58Z\",\n \"departed_at\": \"2021-01-25T23:34:32Z\",\n \"description\": \"\",\n \"distance\": 25356,\n \"duration\": 3851,\n \"elevation_gain\": 403.445,\n \"elevation_loss\": 400.121,\n \"id\": 61904776,\n \"name\": \"2021/01/25\",\n \"type\": \"\",\n \"track_id\": \"600f64a2fa348e8e23e2d546\",\n \"updated_at\": \"2021-01-26T00:38:58Z\",\n \"user_id\": 836,\n \"visibility\": 1,\n \"first_lat\": 47.502655,\n \"first_lng\": -122.602798,\n \"last_lat\": 47.502655,\n \"last_lng\": -122.602798\n}\n</code></pre>"},{"location":"commands/strava-activities/","title":"Strava activities","text":"<p>List all <code>VirtualRides</code> in the last 20 activities and display their <code>ID</code>, <code>Name</code>, <code>StartDate</code>, and their <code>Distance</code> in miles</p> <pre><code>$ gravl -c --timeout 1m strava activities -N 20 -f \".Type == 'VirtualRide'\" -B \".ID, .Name, .StartDateLocal, .Distance.Miles()\"\n2021-02-20T08:50:32-08:00 INF do all=0 count=20 n=0 start=0 total=20\n2021-02-20T08:50:34-08:00 INF do all=20 count=20 n=20 start=1 total=20\n[4807285657,\"Yorkshire - Jon's Short Mix\",\"2021-02-18T06:56:20Z\",10.702124592380498]\n[4802094087,\"London\",\"2021-02-17T06:55:39Z\",12.95105334844508]\n[4741552384,\"2004\",\"2021-02-05T18:15:27Z\",17.51514902966675]\n</code></pre>"},{"location":"commands/strava-activity/","title":"Strava activity","text":"<p>To query a specific activity:</p> <pre><code>$ gravl strava activity 4802094087\n{\n\"id\": 4802094087,\n \"resource_state\": 3,\n \"external_id\": \"zwift-activity-752165469668926976.fit\",\n \"upload_id\": 5123870639,\n...\n \"gear\": {\n\"id\": \"b6713218\",\n  \"primary\": false,\n  \"name\": \"Smart Trainer\",\n  \"resource_state\": 2,\n  \"distance\": 711026,\n  \"athlete_id\": 0\n},\n ...\n \"device_name\": \"Zwift\",\n \"segment_leaderboard_opt_out\": false,\n \"leaderboard_opt_out\": false,\n \"perceived_exertion\": 6,\n \"prefer_perceived_exertion\": false\n}\n</code></pre> <p>To include stream data use the <code>-s</code> flag:</p> <pre><code>$ gravl strava activity -s watts 4802094087\n{\n\"id\": 4802094087,\n \"resource_state\": 3,\n \"external_id\": \"zwift-activity-752165469668926976.fit\",\n \"upload_id\": 5123870639,\n ...\n \"name\": \"London\",\n \"distance\": 20842.7,\n \"moving_time\": 2463,\n \"elapsed_time\": 2463,\n \"total_elevation_gain\": 216,\n \"type\": \"VirtualRide\",\n \"start_date\": \"2021-02-17T14:55:39Z\",\n \"start_date_local\": \"2021-02-17T06:55:39Z\",\n ...\n \"streams\": {\n\"activity_id\": 4802094087,\n  \"distance\": {\n\"original_size\": 2464,\n   \"resolution\": \"high\",\n   \"series_type\": \"distance\",\n   \"data\": [\n2.5,\n    4.3,\n    6.6,\n    9.2,\n    ...\n    20829.9,\n    20835.3,\n    20840.2,\n    20845.2\n   ]\n},\n  \"watts\": {\n\"original_size\": 2464,\n   \"resolution\": \"high\",\n   \"series_type\": \"distance\",\n   \"data\": [\n89,\n    105,\n    105,\n    105,\n    ...\n    367,\n    368,\n    376,\n    408,\n    406,\n    396,\n    396,\n    408,\n    412,\n    361,\n    400,\n    ...\n   ]\n}\n}\n}\n</code></pre>"},{"location":"commands/strava-streamsets/","title":"Strava streamsets","text":"<p>Query the available streams for query with <code>activity</code>.</p> <pre><code>$ gravl strava streamsets\n{\n\"altitude\": \"The sequence of altitude values for this stream, in meters [float]\",\n \"cadence\": \"The sequence of cadence values for this stream, in rotations per minute [integer]\",\n \"distance\": \"The sequence of distance values for this stream, in meters [float]\",\n \"grade_smooth\": \"The sequence of grade values for this stream, as percents of a grade [float]\",\n \"heartrate\": \"The sequence of heart rate values for this stream, in beats per minute [integer]\",\n \"latlng\": \"The sequence of lat/long values for this stream [float, float]\",\n \"moving\": \"The sequence of moving values for this stream, as boolean values [boolean]\",\n \"temp\": \"The sequence of temperature values for this stream, in celsius degrees [float]\",\n \"time\": \"The sequence of time values for this stream, in seconds [integer]\",\n \"velocity_smooth\": \"The sequence of velocity values for this stream, in meters per second [float]\",\n \"watts\": \"The sequence of power values for this stream, in watts [integer]\"\n}\n</code></pre> <p>To get just the stream names:</p> <pre><code>$ gravl strava streamsets | jq -r \"keys | .[]\"\naltitude\ncadence\ndistance\ngrade_smooth\nheartrate\nlatlng\nmoving\ntemp\ntime\nvelocity_smooth\nwatts\n</code></pre>"},{"location":"commands/strava/","title":"Strava","text":"<p>The Strava client is comprised of general API access supporting activities, routes, and streams.</p> <p>Additionally, there's full support for implementing <code>webhooks</code> but only only webhook management is available via the commandline (eg <code>strava webhook list</code>, <code>strava webhook subscribe</code>, and <code>strava webhook unsubscribe</code>).</p>"},{"location":"commands/zwift-files/","title":"Zwift files","text":"<p>List all local files from the Zwift app's directory. Any files less than 1K in size or named <code>inProgressActivity.fit</code> will be ignored.</p> <pre><code>$ gravl zwift files\n2021-02-19T19:39:25-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-39-52.fit size=584\n2021-02-19T19:39:25-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-14-13.fit size=584\n2021-02-19T19:39:25-08:00 WRN skipping, activity in progress file=/Users/bzimmer/Documents/Zwift/Activities/inProgressActivity.fit\n[\n\"/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-40-53.fit\",\n \"/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-15-16.fit\"\n]\n</code></pre> <p>This command can be easily combined with <code>jq</code> to upload files to CyclingAnalytics, Strava, or any other site.</p> <pre><code>$ gravl zwift files | jq -r \".[]\" | xargs gravl strava upload -n\n2021-02-19T19:41:50-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-39-52.fit size=584\n2021-02-19T19:41:50-08:00 WRN skipping, too small file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-14-13.fit size=584\n2021-02-19T19:41:50-08:00 WRN skipping, activity in progress file=/Users/bzimmer/Documents/Zwift/Activities/inProgressActivity.fit\n2021-02-19T19:41:50-08:00 INF collecting file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-12-18-40-53.fit\n2021-02-19T19:41:50-08:00 INF uploading dryrun=true file=2021-01-12-18-40-53.fit\n2021-02-19T19:41:50-08:00 INF collecting file=/Users/bzimmer/Documents/Zwift/Activities/2021-01-26-18-15-16.fit\n2021-02-19T19:41:50-08:00 INF uploading dryrun=true file=2021-01-26-18-15-16.fit\n</code></pre>"},{"location":"commands/zwift-refresh/","title":"Zwift refresh","text":"<p>Query for a new refresh token from Zwift.</p> <pre><code>$ gravl zwift refresh\n{\n\"access_token\": \"12345\",\n    \"token_type\": \"bearer\",\n    \"refresh_token\": \"67890\",\n    \"expiry\": \"2021-02-20T01:29:05.964572-08:00\"\n}\n</code></pre>"},{"location":"commands/zwift/","title":"Zwift","text":"<p>The Zwift client was heavily inspired by zwift-client.</p> <p>The command <code>files</code> is useful for uploading local files to services without direct integration such as Cycling Analytics.</p>"}]}