package geo_test

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

type P struct {
	Longitude, Latitude, Elevation, Distance, Grade float64
}

// Example points from querying both Strava and CyclingAnalytics for the same ride
// Note, for the same lat/lng:
//  - grades differ, sometimes significantly (also CA rounds)
//  - distances are accumulative in both cases but don't match
var points = []P{
	// cyclinganalytics (# stream elements: 3920)
	{-122.506963, 47.604435, 65.400000, 569.000000, -3.000000},
	{-122.507063, 47.604461, 65.200000, 579.000000, -3.000000},
	{-122.507170, 47.604473, 65.000000, 584.000000, -2.000000},
	{-122.507262, 47.604473, 64.800000, 591.000000, -2.000000},
	{-122.507331, 47.604458, 64.800000, 596.000000, -2.000000},
	{-122.507399, 47.604439, 64.600000, 607.000000, -1.000000},
	{-122.507430, 47.604431, 64.600000, 613.000000, -2.000000},
	{-122.507454, 47.604401, 64.400000, 621.000000, -2.000000},
	{-122.507469, 47.604367, 64.200000, 626.000000, -2.000000},
	{-122.507477, 47.604333, 64.200000, 636.000000, -3.000000},

	{-122.505889, 47.603681, 65.800000, 424.000000, 3.000000},
	{-122.505890, 47.603751, 66.000000, 428.000000, 4.000000},
	{-122.505890, 47.603786, 66.200000, 434.000000, 3.000000},
	{-122.505890, 47.603820, 66.400000, 439.000000, 4.000000},
	{-122.505890, 47.603876, 66.600000, 447.000000, 3.000000},
	{-122.505890, 47.603923, 66.800000, 452.000000, 6.000000},
	{-122.505883, 47.603964, 67.000000, 459.000000, 6.000000},
	{-122.505875, 47.604010, 67.400000, 461.000000, 6.000000},
	{-122.505860, 47.604064, 67.800000, 468.000000, 8.000000},
	{-122.505852, 47.604113, 68.000000, 476.000000, 9.000000},

	// strava (# stream elements: 3613)
	{-122.506846, 47.604423, 65.600000, 563.500000, -3.300000},
	{-122.506963, 47.604435, 65.400000, 569.200000, -3.000000},
	{-122.507063, 47.604461, 65.200000, 578.700000, -2.900000},
	{-122.507170, 47.604473, 65.000000, 584.400000, -2.200000},
	{-122.507262, 47.604473, 64.800000, 591.500000, -2.100000},
	{-122.507331, 47.604458, 64.800000, 596.200000, -1.400000},
	{-122.507399, 47.604439, 64.600000, 607.200000, -1.400000},
	{-122.507430, 47.604431, 64.600000, 612.900000, -2.000000},
	{-122.507454, 47.604401, 64.400000, 620.500000, -1.400000},
	{-122.507469, 47.604367, 64.200000, 626.200000, -2.300000},

	{-122.505882, 47.603641, 65.600000, 415.500000, 2.300000},
	{-122.505889, 47.603681, 65.800000, 423.500000, 3.400000},
	{-122.505890, 47.603751, 66.000000, 428.300000, 3.400000},
	{-122.505890, 47.603786, 66.200000, 434.200000, 3.400000},
	{-122.505890, 47.603820, 66.400000, 438.900000, 3.400000},
	{-122.505890, 47.603876, 66.600000, 447.000000, 3.200000},
	{-122.505890, 47.603923, 66.800000, 451.700000, 4.400000},
	{-122.505883, 47.603964, 67.000000, 459.000000, 5.600000},
	{-122.505875, 47.604010, 67.400000, 461.400000, 5.000000},
	{-122.505860, 47.604064, 67.800000, 468.500000, 6.900000},
}

func TestDistance(t *testing.T) {
	t.Parallel()
	a := assert.New(t)

	a.NotNil(points)

	// p := geom.NewPointFlat(geom.XYZ, []float64{-122.505875, 47.604010, 67.400000})
	// q := geom.NewPointFlat(geom.XYZ, []float64{-122.505860, 47.604064, 67.800000})
	// step := geo.To(p, q)
	// a.Equal(468.50-461.4, step.Distance2D)
	// a.Equal(468.50-461.4, step.Distance3D)

	// p = geom.NewPointFlat(geom.XYZ, []float64{-122.505860, 47.604064, 67.800000})
	// q = geom.NewPointFlat(geom.XYZ, []float64{-122.505852, 47.604113, 68.000000})
	// step = geo.To(p, q)
	// a.Equal(476.000000-468.000000, step.Distance2D)
	// a.Equal(476.000000-468.000000, step.Distance3D)

	// y := gpx.Point{Latitude: 47.604064, Longitude: -122.505860, Elevation: *gpx.NewNullableFloat64(67.800000)}
	// z := gpx.Point{Latitude: 47.604113, Longitude: -122.505852, Elevation: *gpx.NewNullableFloat64(68.000000)}

	// a.Equal(476.000000-468.000000, gpx.Distance2D(y.Latitude, y.Longitude, z.Latitude, z.Longitude, true))
	// a.Equal(476.000000-468.000000, gpx.Distance3D(y.Latitude, y.Longitude, y.Elevation, z.Latitude, z.Longitude, z.Elevation, true))
}
